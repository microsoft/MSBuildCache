variables:
- template: templates\variables.yml

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main
  always: true

trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    exclude:
    - '*.md'

pool:
  vmImage: windows-latest

resources:
  repositories:
  - repository: msbuild
    type: github
    endpoint: 'MSBuild Github'
    name: dotnet/msbuild
    ref: main

jobs:
- job: BuildVS
  displayName: Build using VS
  variables:
    VsInstallDir: $(Build.ArtifactStagingDirectory)/vs
  steps:
  - checkout: self
    # Fetch all history for versioning
    fetchDepth: 0

  - task: Cache@2
    displayName: Cache Visual Studio
    inputs:
      key: '"vs" | "$(Agent.OS)"'
      path: $(VsInstallDir)

  - script: |
      del %TEMP%\vs_buildtools.exe
      
      curl.exe -L https://aka.ms/vs/17/release/vs_buildtools.exe -o %TEMP%\vs_buildtools.exe
      
      %TEMP%\vs_buildtools.exe ^
        --config "$(Build.SourcesDirectory)\.vsconfig" ^
        --installPath "$(VsInstallDir)" ^
        --passive ^
        --norestart ^
        --wait
      echo VS installer exit code: %ERRORLEVEL%

      del %TEMP%\vs_buildtools.exe

      echo Current MSBuild version:
      "$(VsInstallDir)\MSBuild\Current\Bin\amd64\MSBuild.exe" --version
    displayName: 'Install VS'

  - template: templates\build.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)

  - template: templates\test.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)
      MSBuildPath: $(VsInstallDir)\MSBuild\Current\Bin\amd64\MSBuild.exe

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()

- job: BuildMSBuildRepo
  displayName: Build using tip of MSBuild repo
  variables:
    # Used as an env var as well
    MSBuildLibraries: $(Build.SourcesDirectory)\msbuild\artifacts\bin\bootstrap\net472\MSBuild\Current\Bin\amd64
  steps:
  - checkout: self
    # Fetch all history for versioning
    fetchDepth: 0

  - checkout: msbuild

  - task: Cache@2
    displayName: Cache MSBuild
    inputs:
      key: '"msbuild" | "$(Agent.OS)" | "$(BuildConfiguration)" | ./msbuild/.git/HEAD'
      path: msbuild/artifacts
      cacheHitVar: MSBUILD_RESTORED

  - script: |
      .\msbuild\build.cmd /p:CreateBootstrap=true /p:Configuration=$(BuildConfiguration)
    displayName: Build MSBuild
    condition: ne(variables.MSBUILD_RESTORED, 'true')

  - template: templates\build.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)/MSBuildCache

  - template: templates\test.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)/MSBuildCache
      MSBuildPath: $(MSBuildLibraries)\MSBuild.exe

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()
