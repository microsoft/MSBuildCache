variables:
- template: templates\variables.yml

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main
  always: true

trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    exclude:
    - '*.md'

pool:
  vmImage: windows-latest

resources:
  repositories:
  - repository: msbuild
    type: github
    endpoint: 'MSBuild Github'
    name: dotnet/msbuild
    ref: main

jobs:
- job: Build
  displayName: Build and Test
  steps:
  - checkout: self
    # Fetch all history for versioning
    fetchDepth: 0

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNetVersion)'
    inputs:
      version: '$(DotNetVersion)'

  - task: NuGetAuthenticate@1
    displayName: NuGet Authenticate

  - script: |
      dotnet build $(Build.SourcesDirectory)/MSBuildCache.sln --configuration $(BuildConfiguration) -BinaryLogger:$(LogDirectory)/msbuild.binlog
    displayName: Build

  - task: DotNetCoreCLI@2
    displayName: Run Unit Tests
    inputs:
      command: test
      projects: $(Build.SourcesDirectory)/MSBuildCache.sln
      arguments: -restore:false --no-build --configuration $(BuildConfiguration)

  - publish: $(ArtifactsDirectory)
    displayName: Publish Artifacts
    artifact: artifacts
    condition: always()

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()

- job: E2ETestVS
  displayName: E2E Tests using VS
  dependsOn: Build
  variables:
    VsInstallDir: $(Build.ArtifactStagingDirectory)\vs
    MSBuildPath: $(VsInstallDir)\MSBuild\Current\Bin\amd64\MSBuild.exe
  steps:
  - download: current
    displayName: 'Download Build Artifacts'
    artifact: artifacts

  - checkout: self

  # Avoiding Caching VS for now as the installer command we're using doesn't work for upgrades
  # - task: Cache@2
  #   displayName: Cache Visual Studio
  #   inputs:
  #     key: '"vs-release" | "$(Agent.OS)"'
  #     path: $(VsInstallDir)

  - script: |
      del %TEMP%\vs_buildtools.exe
      
      curl.exe -L https://aka.ms/vs/17/release/vs_buildtools.exe -o %TEMP%\vs_buildtools.exe
      
      %TEMP%\vs_buildtools.exe ^
        --config "$(Build.SourcesDirectory)\.vsconfig" ^
        --installPath "$(VsInstallDir)" ^
        --passive ^
        --norestart ^
        --wait
      echo VS installer exit code: %ERRORLEVEL%

      del %TEMP%\vs_buildtools.exe

      echo Copying installer logs
      mkdir "$(LogDirectory)\VSSetup"
      move "%TEMP%\dd_*" "$(LogDirectory)\VSSetup\"

      echo Current MSBuild version:
      "$(MSBuildPath)" --version
    displayName: 'Install VS'

  - template: templates\e2e-test.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)
      MSBuildPath: $(MSBuildPath)

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()

- job: E2ETestVSPreview
  displayName: E2E Tests using VS Preview
  dependsOn: Build
  variables:
    VsInstallDir: $(Build.ArtifactStagingDirectory)\vs
    MSBuildPath: $(VsInstallDir)\MSBuild\Current\Bin\amd64\MSBuild.exe
  steps:
  - download: current
    displayName: 'Download Build Artifacts'
    artifact: artifacts

  - checkout: self

  # Avoiding Caching VS for now as the installer command we're using doesn't work for upgrades
  # - task: Cache@2
  #   displayName: Cache Visual Studio
  #   inputs:
  #     key: '"vs-pre" | "$(Agent.OS)"'
  #     path: $(VsInstallDir)

  - script: |
      del %TEMP%\vs_buildtools.exe
      
      curl.exe -L https://aka.ms/vs/17/pre/vs_buildtools.exe -o %TEMP%\vs_buildtools.exe
      
      %TEMP%\vs_buildtools.exe ^
        --config "$(Build.SourcesDirectory)\.vsconfig" ^
        --installPath "$(VsInstallDir)" ^
        --passive ^
        --norestart ^
        --wait
      echo VS installer exit code: %ERRORLEVEL%

      del %TEMP%\vs_buildtools.exe

      echo Copying installer logs
      mkdir "$(LogDirectory)\VSSetup"
      move "%TEMP%\dd_*" "$(LogDirectory)\VSSetup\"

      echo Current MSBuild version:
      "$(MSBuildPath)" --version
    displayName: 'Install VS Preview'

  - template: templates\e2e-test.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)
      MSBuildPath: $(MSBuildPath)

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()

- job: E2ETestMSBuildRepo
  displayName: E2E Tests using tip of MSBuild repo
  dependsOn: Build
  variables:
    MSBuildPath: $(Build.SourcesDirectory)\msbuild\artifacts\bin\bootstrap\net472\MSBuild\Current\Bin\amd64\MSBuild.exe
  steps:
  - download: current
    displayName: 'Download Build Artifacts'
    artifact: artifacts

  - checkout: self

  - checkout: msbuild

  - task: Cache@2
    displayName: Cache MSBuild
    inputs:
      key: '"msbuild" | "$(Agent.OS)" | "$(BuildConfiguration)" | ./msbuild/.git/HEAD'
      path: msbuild/artifacts
      cacheHitVar: MSBUILD_RESTORED

  - script: |
      .\msbuild\build.cmd /p:CreateBootstrap=true /p:Configuration=$(BuildConfiguration)
    displayName: Build MSBuild
    condition: ne(variables.MSBUILD_RESTORED, 'true')

  - template: templates\e2e-test.yml
    parameters:
      RepoRoot: $(Build.SourcesDirectory)/MSBuildCache
      MSBuildPath: $(MSBuildPath)

  - publish: $(LogDirectory)
    displayName: Publish Logs
    artifact: '$(System.JobDisplayName) logs'
    condition: always()
